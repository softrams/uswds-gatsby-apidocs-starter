openapi: 3.0.0
info:
  title: Blue Button 2.0 with OAuth2
  description: |-
    **D R A F T -- D R A F T -- D R A F T -- D R A F T -- D R A F T -- D R A F
        T**

    The Centers for Medicare & Medicaid Services (CMS) Blue Button 2.0 API is a
        developer-friendly, standards-based, data API that enables Medicare
        beneficiaries to connect their Medicare claims data to the applications,
        services, and research programs they trust.

    Claims information that extends as far back as 2015 can be accessed using the
        HL7 Fast Healthcare interoperability Resource (FHIR) specification.

    Fast Healthcare Interoperability Resources (FHIR, pronounced "Fire") defines
        a set of "resources" that represent granular clinical concepts. The
        resources can be managed in isolation, or aggregated into complex documents.
        Technically, FHIR is designed for the web; the resources are based on simple
        XML or JSON structures, with an http-based RESTful protocol where each
        resource has predictable URL. Where possible, open internet standards are
        used for data representation and OAuth2 is used to control access to secure
        FHIR resources..

    The **CMS Blue Button 2.0 API** is keyed by a unique Patient id. This id is
        used to apply filter parameters in requests and searches to limit the
        information returned to that of the logged in user.

    In FHIR terms the **Medicare Beneficiary** is the "**Patient**." In order to
        be  consistent with the FHIR specification we will use the term Patient
        throughout this documentation to refer to the Medicare Beneficiary.

    This is the frist version of ouur OpenAPI3 definiiton docuument that attempts to
        import fhir json schema from an external file in the fhir sub-directory.
  version: v1.0.44-11
servers:
  - url: https://sandbox.bluebutton.cms.gov:/{basePath}
    description: Blue Button 2.0 API - Sandbox with Synthetic data
    variables:
      port:
        default: '443'
      basePath:
        default: v1/fhir
tags:
- name: CapabilityStatement
- name: Patient
- name: Coverage
- name: ExplanationOfBenefit

paths:
  /metadata:
    description: Metadata statement. In DSTU2 this was known as the ConformanceStatement. In STU3 this was changed to the CapabilityStatement
    get:
      tags:
      - CapabilityStatement
      parameters:
      - name: _format
        in: query
        description: The format for the returned body content
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: application/fhir+json
          enum:
          - application/fhir+json
          - application/json
      - name: Content-Type
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - application/fhir+json
          - application/json
      responses:
        200:
          $ref: '#/components/schemas/CapabilityStatement'
        401:
          $ref: '#/components/schemas/Error-401'
        403:
          $ref: '#/components/schemas/Error-403'
        404:
          $ref: '#/components/schemas/Error-404'

  /Patient:
    get:
      security:
        - OAuth2:
            - read
      tags:
        - Patient
      parameters:
        - name: _id
          in: query
          description: The ID of the resource
          required: false
          schema:
            type: string
        - name: identifier
          in: query
          description: A patient identifier
          required: false
          schema:
            type: string
        - name: _format
          in: query
          description: The format for the returned body content
          required: false
          schema:
            type: string
            default: application/fhir+json
            enum:
              - application/fhir+json
              - application/json
      responses:
        200:
          $ref: '#/components/schemas/Bundle'
        401:
          $ref: '#/components/schemas/Error-401'
        403:
          $ref: '#/components/schemas/Error-403'
        404:
          $ref: '#/components/schemas/Error-404'

  /Patient/{id}:
    summary: Get a patient by ID
    get:
      security:
        - OAuth2:
            - read
      tags:
        - Patient
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          $ref: '#/components/schemas/Patient'
        401:
          $ref: '#/components/schemas/Error-401'
        403:
          $ref: '#/components/schemas/Error-403'
        404:
          $ref: '#/components/schemas/Error-404'

  /Coverage:
    get:
      security:
        - OAuth2:
            - read
      tags:
        - Coverage
      parameters:
        - name: beneficiary
          in: query
          description: Covered party
          required: false
          schema:
            type: string
        - name: _format
          in: query
          description: The format for the returned body content
          required: false
          schema:
            type: string
            default: application/fhir+json
            enum:
              - application/fhir+json
              - application/json
        - name: startIndex
          in: query
          description: The startiing item in the set of records found by search
          required: false
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: _count
          in: query
          description: The number of records to return in the bundle [maximum=50]
          required: false
          schema:
            maximum: 50
            minimum: 0
            type: integer
            format: int32
            default: 10
        - name: count
          in: query
          description: 'Deprecated: Use _count instead'
          required: false
          deprecated: true
          schema:
            maximum: 50
            minimum: 0
            type: integer
            format: int32
      responses:
        200:
          $ref: '#/components/schemas/Bundle'
        401:
          $ref: '#/components/schemas/Error-401'
        403:
          $ref: '#/components/schemas/Error-403'
        404:
          $ref: '#/components/schemas/Error-404'

  /Coverage/{id}:
    get:
      security:
        - OAuth2:
            - read
      tags:
        - Coverage
      parameters:
        - name: id
          in: path
          description: The ID of the resource
          required: true
          schema:
            type: string
        - name: _format
          in: query
          description: The format for the returned body content
          required: false
          schema:
            type: string
            default: application/fhir+json
            enum:
              - application/fhir+json
              - application/json
      responses:
        200:
          $ref: '#/components/schemas/Coverage'
        401:
          $ref: '#/components/schemas/Error-401'
        403:
          $ref: '#/components/schemas/Error-403'
        404:
          $ref: '#/components/schemas/Error-404'

  /ExplanationOfBenefit:
    get:
      security:
        - OAuth2:
            - read
      tags:
        - ExplanationOfBenefit
      parameters:
        - name: patient
          in: query
          description: The reference to the patient
          required: false
          schema:
            type: string
        - name: startIndex
          in: query
          description: The startiing item in the set of records found by search
          required: false
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: _count
          in: query
          description: The number of records to return in the bundle [maximum=50]
          required: false
          schema:
            maximum: 50
            minimum: 0
            type: integer
            format: int32
            default: 10
        - name: count
          in: query
          description: 'Deprecated: Use _count instead'
          required: false
          deprecated: true
          schema:
            maximum: 50
            minimum: 0
            type: integer
            format: int32
        - name: _format
          in: query
          description: The format for the returned body content
          required: false
          schema:
            type: string
            default: application/fhir+json
            enum:
              - application/fhir+json
              - application/json
      responses:
        200:
          $ref: '#/components/schemas/Bundle'
        401:
          $ref: '#/components/schemas/Error-401'
        403:
          $ref: '#/components/schemas/Error-403'
        404:
          $ref: '#/components/schemas/Error-404'

  /ExplanationOfBenefit/{id}:
    get:
      security:
        - OAuth2:
            - read
      tags:
        - ExplanationOfBenefit
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: _format
          in: query
          description: The format for the returned body content
          required: false
          schema:
            type: string
            default: application/fhir+json
            enum:
              - application/fhir+json
              - application/json
      responses:
        200:
          $ref: '#/components/schemas/ExplanationOfBenefit'
        401:
          $ref: '#/components/schemas/Error-401'
        403:
          $ref: '#/components/schemas/Error-403'
        404:
          $ref: '#/components/schemas/Error-404'


components:
  schemas:
    CapabilityStatement:
      $ref: 'CapabilityStatement.schema.json#/definitions/CapabilityStatement'

    Bundle:
      $ref: 'Bundle.schema.json#/definitions/Bundle'

    Coverage:
      $ref: 'Coverage.schema.json#/definitions/Coverage'

    Patient:
      $ref: 'Patient.schema.json#/definitions/Patient'

    ExplanationOfBenefit:
      $ref: 'ExplanationOfBenefit.schema.json#/definitions/ExplanationOfBenefit'


    Success-200Empty:
      description: Sucessful call. 200 OK returned with no body details.
    Error-401:
      description: Authentication credentials were not provided. Unable to continue.
    Error-403:
      description: The Access token does not have the correct scopes or permissions. Unable to process your request.
    Error-404:
      description: The page/resource you requested was not found.
    Error-405:
      description: Method Not Allowed.

  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://sandbox.bluebutton.cms.gov/v1/o/authorize/
          tokenUrl: https://sandbox.bluebutton.cms.gov/v1/o/token/?clientid=yIVEy5I4CD0i3pkcxQsrw7rchLTJF7Du8KwRqKUL&client_secret=lUnJLqqzdEkkznPb7QdC5Y8151vTVpthycQbAbcONBw9Y7mlYYIF4y5vPOsyWXHoTGJGtzmSjNU4dZj61NwxpPkJXF4prIj3m6JuBmFyE9BsR51HmwDQW841ava9P48B
