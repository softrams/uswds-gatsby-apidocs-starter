{
  "openapi": "3.0.0",
  "info": {
    "title": "Simplified FHIR API",
    "description": "A simplified version of the HL7 FHIR API",
    "version": "4.0.1"
  },
  "servers": [
    {
      "url": "/fhir-server/api/v4"
    }
  ],
  "x-ibm-configuration": {
    "gateway": "datapower-api-gateway",
    "type": "rest",
    "phase": "realized",
    "enforced": true,
    "testable": true,
    "cors": {
      "enabled": true
    },
    "assembly": {
      "execute": [
        {
          "invoke": {
            "version": "2.0.0",
            "title": "invoke",
            "header-control": {
              "type": "blacklist",
              "values": []
            },
            "parameter-control": {
              "type": "whitelist",
              "values": []
            },
            "timeout": 60,
            "verb": "keep",
            "cache-response": "protocol",
            "cache-ttl": 900,
            "stop-on-error": [],
            "target-url": "$(target-url)$(api.operation.path)$(request.search)"
          }
        }
      ],
      "catch": []
    },
    "properties": {
      "target-url": {
        "value": "https://localhost/fhir-server/api/v4/",
        "description": "The URL of the target service",
        "encoded": false
      }
    },
    "activity-log": {
      "enabled": true,
      "error-content": "header",
      "success-content": "activity"
    },
    "application-authentication": {
      "certificate": false
    },
    "catalogs": {}
  },
  "tags": [
    {
      "name": "Patient"
    }
  ],
  "paths": {
    "/metadata": {
      "get": {
        "tags": ["Other"],
        "summary": "Get the FHIR Capability statement for this endpoint",
        "operationId": "metadata",
        "responses": {
          "200": {
            "description": "metadata operation successful",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/CapabilityStatement"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "post": {
        "tags": ["Other"],
        "summary": "Perform a batch operation",
        "operationId": "batch",
        "responses": {
          "200": {
            "description": "batch operation successful",
            "content": {
              "application/fhir+json": {
                "schema": {
                  "$ref": "#/components/schemas/Bundle"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/fhir+json": {
              "schema": {
                "$ref": "#/components/schemas/Bundle"
              }
            }
          },
          "required": true
        }
      }
    }
  },
  "components": {
    "requestBodies": {
      "Patient": {
        "content": {
          "application/fhir+json": {
            "schema": {
              "$ref": "#/components/schemas/Patient"
            }
          }
        },
        "required": true
      }
    },
    "schemas": {
      "Resource": {
        "type": "object",
        "discriminator": {
          "propertyName": "resourceType"
        },
        "properties": {
          "resourceType": {
            "type": "string",
            "enum": [
              "Account",
              "ActivityDefinition",
              "AdverseEvent",
              "AllergyIntolerance",
              "Appointment",
              "AppointmentResponse",
              "AuditEvent",
              "Basic",
              "Binary",
              "BiologicallyDerivedProduct",
              "BodyStructure",
              "Bundle",
              "CapabilityStatement",
              "CarePlan",
              "CareTeam",
              "CatalogEntry",
              "ChargeItem",
              "ChargeItemDefinition",
              "Claim",
              "ClaimResponse",
              "ClinicalImpression",
              "CodeSystem",
              "Communication",
              "CommunicationRequest",
              "CompartmentDefinition",
              "Composition",
              "ConceptMap",
              "Condition",
              "Consent",
              "Contract",
              "Coverage",
              "CoverageEligibilityRequest",
              "CoverageEligibilityResponse",
              "DetectedIssue",
              "Device",
              "DeviceDefinition",
              "DeviceMetric",
              "DeviceRequest",
              "DeviceUseStatement",
              "DiagnosticReport",
              "DocumentManifest",
              "DocumentReference",
              "DomainResource",
              "EffectEvidenceSynthesis",
              "Encounter",
              "Endpoint",
              "EnrollmentRequest",
              "EnrollmentResponse",
              "EpisodeOfCare",
              "EventDefinition",
              "Evidence",
              "EvidenceVariable",
              "ExampleScenario",
              "ExplanationOfBenefit",
              "FamilyMemberHistory",
              "Flag",
              "Goal",
              "GraphDefinition",
              "Group",
              "GuidanceResponse",
              "HealthcareService",
              "ImagingStudy",
              "Immunization",
              "ImmunizationEvaluation",
              "ImmunizationRecommendation",
              "ImplementationGuide",
              "InsurancePlan",
              "Invoice",
              "Library",
              "Linkage",
              "List",
              "Location",
              "Measure",
              "MeasureReport",
              "Media",
              "Medication",
              "MedicationAdministration",
              "MedicationDispense",
              "MedicationKnowledge",
              "MedicationRequest",
              "MedicationStatement",
              "MedicinalProduct",
              "MedicinalProductAuthorization",
              "MedicinalProductContraindication",
              "MedicinalProductIndication",
              "MedicinalProductIngredient",
              "MedicinalProductInteraction",
              "MedicinalProductManufactured",
              "MedicinalProductPackaged",
              "MedicinalProductPharmaceutical",
              "MedicinalProductUndesirableEffect",
              "MessageDefinition",
              "MessageHeader",
              "MolecularSequence",
              "NamingSystem",
              "NutritionOrder",
              "Observation",
              "ObservationDefinition",
              "OperationDefinition",
              "OperationOutcome",
              "Organization",
              "OrganizationAffiliation",
              "Parameters",
              "Patient",
              "PaymentNotice",
              "PaymentReconciliation",
              "Person",
              "PlanDefinition",
              "Practitioner",
              "PractitionerRole",
              "Procedure",
              "Provenance",
              "Questionnaire",
              "QuestionnaireResponse",
              "RelatedPerson",
              "RequestGroup",
              "ResearchDefinition",
              "ResearchElementDefinition",
              "ResearchStudy",
              "ResearchSubject",
              "Resource",
              "RiskAssessment",
              "RiskEvidenceSynthesis",
              "Schedule",
              "SearchParameter",
              "ServiceRequest",
              "Slot",
              "Specimen",
              "SpecimenDefinition",
              "StructureDefinition",
              "StructureMap",
              "Subscription",
              "Substance",
              "SubstanceNucleicAcid",
              "SubstancePolymer",
              "SubstanceProtein",
              "SubstanceReferenceInformation",
              "SubstanceSourceMaterial",
              "SubstanceSpecification",
              "SupplyDelivery",
              "SupplyRequest",
              "Task",
              "TerminologyCapabilities",
              "TestReport",
              "TestScript",
              "ValueSet",
              "VerificationResult",
              "VisionPrescription"
            ]
          },
          "id": {
            "type": "string",
            "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
            "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes."
          },
          "meta": {
            "$ref": "#/components/schemas/Meta",
            "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource."
          },
          "implicitRules": {
            "type": "string",
            "pattern": "\\S*",
            "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc."
          },
          "language": {
            "type": "string",
            "pattern": "[^\\s]+(\\s[^\\s]+)*",
            "description": "The base language in which the resource is written."
          }
        },
        "required": ["resourceType"]
      },
      "DomainResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          },
          {
            "type": "object",
            "properties": {
              "text": {
                "$ref": "#/components/schemas/Narrative",
                "description": "A human&ndash;readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety."
              },
              "contained": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Resource",
                  "description": "These resources do not have an independent existence apart from the resource that contains them &ndash; they cannot be identified independently, and nor can they have their own independent transaction scope."
                }
              },
              "extension": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Extension",
                  "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
                }
              },
              "modifierExtension": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Extension",
                  "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
                }
              }
            }
          }
        ]
      },
      "CapabilityStatement": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DomainResource"
          },
          {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "pattern": "\\S*",
                "description": "An absolute URI that is used to identify this capability statement when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this capability statement is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the capability statement is stored on different servers."
              },
              "version": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "The identifier that is used to identify this version of the capability statement when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the capability statement author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence."
              },
              "name": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "A natural language name identifying the capability statement. This name should be usable as an identifier for the module by machine processing applications such as code generation."
              },
              "title": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "A short, descriptive, user&ndash;friendly title for the capability statement."
              },
              "status": {
                "type": "string",
                "enum": ["draft", "active", "retired", "unknown"],
                "description": "The status of this capability statement. Enables tracking the life&ndash;cycle of the content."
              },
              "experimental": {
                "type": "boolean",
                "description": "A Boolean value to indicate that this capability statement is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage."
              },
              "date": {
                "type": "string",
                "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                "description": "The date  (and optionally time) when the capability statement was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the capability statement changes."
              },
              "publisher": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "The name of the organization or individual that published the capability statement."
              },
              "contact": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ContactDetail",
                  "description": "Contact details to assist a user in finding and communicating with the publisher."
                }
              },
              "description": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "A free text natural language description of the capability statement from a consumer's perspective. Typically, this is used when the capability statement describes a desired rather than an actual solution, for example as a formal expression of requirements as part of an RFP."
              },
              "useContext": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UsageContext",
                  "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate capability statement instances."
                }
              },
              "jurisdiction": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CodeableConcept",
                  "description": "A legal or geographic region in which the capability statement is intended to be used."
                }
              },
              "purpose": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "Explanation of why this capability statement is needed and why it has been designed as it has."
              },
              "copyright": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "A copyright statement relating to the capability statement and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the capability statement."
              },
              "kind": {
                "type": "string",
                "enum": ["instance", "capability", "requirements"],
                "description": "The way that this statement is intended to be used, to describe an actual running instance of software, a particular product (kind, not instance of software) or a class of implementation (e.g. a desired purchase)."
              },
              "instantiates": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "\\S*",
                  "description": "Reference to a canonical URL of another CapabilityStatement that this software implements. This capability statement is a published API description that corresponds to a business service. The server may actually implement a subset of the capability statement it claims to implement, so the capability statement must specify the full capability details."
                }
              },
              "imports": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "\\S*",
                  "description": "Reference to a canonical URL of another CapabilityStatement that this software adds to. The capability statement automatically includes everything in the other statement, and it is not duplicated, though the server may repeat the same resources, interactions and operations to add additional details to them."
                }
              },
              "software": {
                "$ref": "#/components/schemas/CapabilityStatement_Software",
                "description": "Software that is covered by this capability statement.  It is used when the capability statement describes the capabilities of a particular software version, independent of an installation."
              },
              "implementation": {
                "$ref": "#/components/schemas/CapabilityStatement_Implementation",
                "description": "Identifies a specific implementation instance that is described by the capability statement &ndash; i.e. a particular installation, rather than the capabilities of a software program."
              },
              "fhirVersion": {
                "type": "string",
                "enum": [
                  "0.01",
                  "0.05",
                  "0.06",
                  "0.11",
                  "0.0.80",
                  "0.0.81",
                  "0.0.82",
                  "0.4.0",
                  "0.5.0",
                  "1.0.0",
                  "1.0.1",
                  "1.0.2",
                  "1.1.0",
                  "1.4.0",
                  "1.6.0",
                  "1.8.0",
                  "3.0.0",
                  "3.0.1",
                  "3.3.0",
                  "3.5.0",
                  "4.0.0",
                  "4.0.1"
                ],
                "description": "The version of the FHIR specification that this CapabilityStatement describes (which SHALL be the same as the FHIR version of the CapabilityStatement itself). There is no default value."
              },
              "format": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "[^\\s]+(\\s[^\\s]+)*",
                  "description": "A list of the formats supported by this implementation using their content types."
                },
                "minItems": 1
              },
              "patchFormat": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "[^\\s]+(\\s[^\\s]+)*",
                  "description": "A list of the patch formats supported by this implementation using their content types."
                }
              },
              "implementationGuide": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "\\S*",
                  "description": "A list of implementation guides that the server does (or should) support in their entirety."
                }
              },
              "rest": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CapabilityStatement_Rest",
                  "description": "A definition of the restful capabilities of the solution, if any."
                }
              },
              "messaging": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CapabilityStatement_Messaging",
                  "description": "A description of the messaging capabilities of the solution."
                }
              },
              "document": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CapabilityStatement_Document",
                  "description": "A document definition."
                }
              }
            },
            "required": ["status", "date", "kind", "fhirVersion", "format"]
          }
        ],
        "example": {
          "resourceType": "CapabilityStatement",
          "meta": {
            "tag": [
              {
                "code": "ibm/minimal"
              }
            ]
          },
          "_status": {
            "extension": [
              {
                "url": "http://hl7.org/fhir/StructureDefinition/data-absent-reason",
                "valueCode": "unknown"
              }
            ]
          },
          "_date": {
            "extension": [
              {
                "url": "http://hl7.org/fhir/StructureDefinition/data-absent-reason",
                "valueCode": "unknown"
              }
            ]
          },
          "_kind": {
            "extension": [
              {
                "url": "http://hl7.org/fhir/StructureDefinition/data-absent-reason",
                "valueCode": "unknown"
              }
            ]
          },
          "_fhirVersion": {
            "extension": [
              {
                "url": "http://hl7.org/fhir/StructureDefinition/data-absent-reason",
                "valueCode": "unknown"
              }
            ]
          },
          "format": [null],
          "_format": [
            {
              "extension": [
                {
                  "url": "http://hl7.org/fhir/StructureDefinition/data-absent-reason",
                  "valueCode": "unknown"
                }
              ]
            }
          ]
        }
      },
      "CapabilityStatement_Software": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackboneElement"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "Name the software is known by."
              },
              "version": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "The version identifier for the software covered by this statement."
              },
              "releaseDate": {
                "type": "string",
                "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                "description": "Date this version of the software was released."
              }
            },
            "required": ["name"]
          }
        ]
      },
      "CapabilityStatement_Implementation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackboneElement"
          },
          {
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "Information about the specific installation that this capability statement relates to."
              },
              "url": {
                "type": "string",
                "pattern": "\\S*",
                "description": "An absolute base URL for the implementation.  This forms the base for REST interfaces as well as the mailbox and document interfaces."
              },
              "custodian": {
                "$ref": "#/components/schemas/Reference",
                "description": "The organization responsible for the management of the instance and oversight of the data on the server at the specified URL."
              }
            },
            "required": ["description"]
          }
        ]
      },
      "CapabilityStatement_Rest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackboneElement"
          },
          {
            "type": "object",
            "properties": {
              "mode": {
                "type": "string",
                "enum": ["client", "server"],
                "description": "Identifies whether this portion of the statement is describing the ability to initiate or receive restful operations."
              },
              "documentation": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "Information about the system's restful capabilities that apply across all applications, such as security."
              },
              "security": {
                "$ref": "#/components/schemas/CapabilityStatement_Rest_Security",
                "description": "Information about security implementation from an interface perspective &ndash; what a client needs to know."
              },
              "resource": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CapabilityStatement_Rest_Resource",
                  "description": "A specification of the restful capabilities of the solution for a specific resource type."
                }
              },
              "interaction": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CapabilityStatement_Rest_Interaction",
                  "description": "A specification of restful operations supported by the system."
                }
              },
              "searchParam": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CapabilityStatement_Rest_Resource_SearchParam",
                  "description": "Search parameters that are supported for searching all resources for implementations to support and/or make use of &ndash; either references to ones defined in the specification, or additional ones defined for/by the implementation."
                }
              },
              "operation": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CapabilityStatement_Rest_Resource_Operation",
                  "description": "Definition of an operation or a named query together with its parameters and their meaning and type."
                }
              },
              "compartment": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "\\S*",
                  "description": "An absolute URI which is a reference to the definition of a compartment that the system supports. The reference is to a CompartmentDefinition resource by its canonical URL ."
                }
              }
            },
            "required": ["mode"]
          }
        ]
      },
      "CapabilityStatement_Rest_Security": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackboneElement"
          },
          {
            "type": "object",
            "properties": {
              "cors": {
                "type": "boolean",
                "description": "Server adds CORS headers when responding to requests &ndash; this enables Javascript applications to use the server."
              },
              "service": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CodeableConcept",
                  "description": "Types of security services that are supported/required by the system."
                }
              },
              "description": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "General description of how security works."
              }
            }
          }
        ]
      },
      "CapabilityStatement_Rest_Resource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackboneElement"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "Account",
                  "ActivityDefinition",
                  "AdverseEvent",
                  "AllergyIntolerance",
                  "Appointment",
                  "AppointmentResponse",
                  "AuditEvent",
                  "Basic",
                  "Binary",
                  "BiologicallyDerivedProduct",
                  "BodyStructure",
                  "Bundle",
                  "CapabilityStatement",
                  "CarePlan",
                  "CareTeam",
                  "CatalogEntry",
                  "ChargeItem",
                  "ChargeItemDefinition",
                  "Claim",
                  "ClaimResponse",
                  "ClinicalImpression",
                  "CodeSystem",
                  "Communication",
                  "CommunicationRequest",
                  "CompartmentDefinition",
                  "Composition",
                  "ConceptMap",
                  "Condition",
                  "Consent",
                  "Contract",
                  "Coverage",
                  "CoverageEligibilityRequest",
                  "CoverageEligibilityResponse",
                  "DetectedIssue",
                  "Device",
                  "DeviceDefinition",
                  "DeviceMetric",
                  "DeviceRequest",
                  "DeviceUseStatement",
                  "DiagnosticReport",
                  "DocumentManifest",
                  "DocumentReference",
                  "DomainResource",
                  "EffectEvidenceSynthesis",
                  "Encounter",
                  "Endpoint",
                  "EnrollmentRequest",
                  "EnrollmentResponse",
                  "EpisodeOfCare",
                  "EventDefinition",
                  "Evidence",
                  "EvidenceVariable",
                  "ExampleScenario",
                  "ExplanationOfBenefit",
                  "FamilyMemberHistory",
                  "Flag",
                  "Goal",
                  "GraphDefinition",
                  "Group",
                  "GuidanceResponse",
                  "HealthcareService",
                  "ImagingStudy",
                  "Immunization",
                  "ImmunizationEvaluation",
                  "ImmunizationRecommendation",
                  "ImplementationGuide",
                  "InsurancePlan",
                  "Invoice",
                  "Library",
                  "Linkage",
                  "List",
                  "Location",
                  "Measure",
                  "MeasureReport",
                  "Media",
                  "Medication",
                  "MedicationAdministration",
                  "MedicationDispense",
                  "MedicationKnowledge",
                  "MedicationRequest",
                  "MedicationStatement",
                  "MedicinalProduct",
                  "MedicinalProductAuthorization",
                  "MedicinalProductContraindication",
                  "MedicinalProductIndication",
                  "MedicinalProductIngredient",
                  "MedicinalProductInteraction",
                  "MedicinalProductManufactured",
                  "MedicinalProductPackaged",
                  "MedicinalProductPharmaceutical",
                  "MedicinalProductUndesirableEffect",
                  "MessageDefinition",
                  "MessageHeader",
                  "MolecularSequence",
                  "NamingSystem",
                  "NutritionOrder",
                  "Observation",
                  "ObservationDefinition",
                  "OperationDefinition",
                  "OperationOutcome",
                  "Organization",
                  "OrganizationAffiliation",
                  "Parameters",
                  "Patient",
                  "PaymentNotice",
                  "PaymentReconciliation",
                  "Person",
                  "PlanDefinition",
                  "Practitioner",
                  "PractitionerRole",
                  "Procedure",
                  "Provenance",
                  "Questionnaire",
                  "QuestionnaireResponse",
                  "RelatedPerson",
                  "RequestGroup",
                  "ResearchDefinition",
                  "ResearchElementDefinition",
                  "ResearchStudy",
                  "ResearchSubject",
                  "Resource",
                  "RiskAssessment",
                  "RiskEvidenceSynthesis",
                  "Schedule",
                  "SearchParameter",
                  "ServiceRequest",
                  "Slot",
                  "Specimen",
                  "SpecimenDefinition",
                  "StructureDefinition",
                  "StructureMap",
                  "Subscription",
                  "Substance",
                  "SubstanceNucleicAcid",
                  "SubstancePolymer",
                  "SubstanceProtein",
                  "SubstanceReferenceInformation",
                  "SubstanceSourceMaterial",
                  "SubstanceSpecification",
                  "SupplyDelivery",
                  "SupplyRequest",
                  "Task",
                  "TerminologyCapabilities",
                  "TestReport",
                  "TestScript",
                  "ValueSet",
                  "VerificationResult",
                  "VisionPrescription"
                ],
                "description": "A type of resource exposed via the restful interface."
              },
              "profile": {
                "type": "string",
                "pattern": "\\S*",
                "description": "A specification of the profile that describes the solution's overall support for the resource, including any constraints on cardinality, bindings, lengths or other limitations. See further discussion in [Using Profiles](profiling.html#profile&ndash;uses)."
              },
              "supportedProfile": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "\\S*",
                  "description": "A list of profiles that represent different use cases supported by the system. For a server, \"supported by the system\" means the system hosts/produces a set of resources that are conformant to a particular profile, and allows clients that use its services to search using this profile and to find appropriate data. For a client, it means the system will search by this profile and process data according to the guidance implicit in the profile. See further discussion in [Using Profiles](profiling.html#profile&ndash;uses)."
                }
              },
              "documentation": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "Additional information about the resource type used by the system."
              },
              "interaction": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CapabilityStatement_Rest_Resource_Interaction",
                  "description": "Identifies a restful operation supported by the solution."
                }
              },
              "versioning": {
                "type": "string",
                "enum": ["no-version", "versioned", "versioned-update"],
                "description": "This field is set to no&ndash;version to specify that the system does not support (server) or use (client) versioning for this resource type. If this has some other value, the server must at least correctly track and populate the versionId meta&ndash;property on resources. If the value is 'versioned&ndash;update', then the server supports all the versioning features, including using e&ndash;tags for version integrity in the API."
              },
              "readHistory": {
                "type": "boolean",
                "description": "A flag for whether the server is able to return past versions as part of the vRead operation."
              },
              "updateCreate": {
                "type": "boolean",
                "description": "A flag to indicate that the server allows or needs to allow the client to create new identities on the server (that is, the client PUTs to a location where there is no existing resource). Allowing this operation means that the server allows the client to create new identities on the server."
              },
              "conditionalCreate": {
                "type": "boolean",
                "description": "A flag that indicates that the server supports conditional create."
              },
              "conditionalRead": {
                "type": "string",
                "enum": [
                  "not-supported",
                  "modified-since",
                  "not-match",
                  "full-support"
                ],
                "description": "A code that indicates how the server supports conditional read."
              },
              "conditionalUpdate": {
                "type": "boolean",
                "description": "A flag that indicates that the server supports conditional update."
              },
              "conditionalDelete": {
                "type": "string",
                "enum": ["not-supported", "single", "multiple"],
                "description": "A code that indicates how the server supports conditional delete."
              },
              "referencePolicy": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "literal",
                    "logical",
                    "resolves",
                    "enforced",
                    "local"
                  ],
                  "description": "A set of flags that defines how references are supported."
                }
              },
              "searchInclude": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "[ \\r\\n\\t\\S]+",
                  "description": "A list of _include values supported by the server."
                }
              },
              "searchRevInclude": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "[ \\r\\n\\t\\S]+",
                  "description": "A list of _revinclude (reverse include) values supported by the server."
                }
              },
              "searchParam": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CapabilityStatement_Rest_Resource_SearchParam",
                  "description": "Search parameters for implementations to support and/or make use of &ndash; either references to ones defined in the specification, or additional ones defined for/by the implementation."
                }
              },
              "operation": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CapabilityStatement_Rest_Resource_Operation",
                  "description": "Definition of an operation or a named query together with its parameters and their meaning and type. Consult the definition of the operation for details about how to invoke the operation, and the parameters."
                }
              }
            },
            "required": ["type"]
          }
        ]
      },
      "CapabilityStatement_Rest_Resource_Interaction": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackboneElement"
          },
          {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "enum": [
                  "read",
                  "vread",
                  "update",
                  "patch",
                  "delete",
                  "history-instance",
                  "history-type",
                  "create",
                  "search-type"
                ],
                "description": "Coded identifier of the operation, supported by the system resource."
              },
              "documentation": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "Guidance specific to the implementation of this operation, such as 'delete is a logical delete' or 'updates are only allowed with version id' or 'creates permitted from pre&ndash;authorized certificates only'."
              }
            },
            "required": ["code"]
          }
        ]
      },
      "CapabilityStatement_Rest_Resource_SearchParam": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackboneElement"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "The name of the search parameter used in the interface."
              },
              "definition": {
                "type": "string",
                "pattern": "\\S*",
                "description": "An absolute URI that is a formal reference to where this parameter was first defined, so that a client can be confident of the meaning of the search parameter (a reference to [SearchParameter.url](searchparameter&ndash;definitions.html#SearchParameter.url)). This element SHALL be populated if the search parameter refers to a SearchParameter defined by the FHIR core specification or externally defined IGs."
              },
              "type": {
                "type": "string",
                "enum": [
                  "number",
                  "date",
                  "string",
                  "token",
                  "reference",
                  "composite",
                  "quantity",
                  "uri",
                  "special"
                ],
                "description": "The type of value a search parameter refers to, and how the content is interpreted."
              },
              "documentation": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "This allows documentation of any distinct behaviors about how the search parameter is used.  For example, text matching algorithms."
              }
            },
            "required": ["name", "type"]
          }
        ]
      },
      "CapabilityStatement_Rest_Resource_Operation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackboneElement"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "The name of the operation or query. For an operation, this is the name  prefixed with $ and used in the URL. For a query, this is the name used in the _query parameter when the query is called."
              },
              "definition": {
                "type": "string",
                "pattern": "\\S*",
                "description": "Where the formal definition can be found. If a server references the base definition of an Operation (i.e. from the specification itself such as ```http://hl7.org/fhir/OperationDefinition/ValueSet&ndash;expand```), that means it supports the full capabilities of the operation &ndash; e.g. both GET and POST invocation.  If it only supports a subset, it must define its own custom [OperationDefinition](operationdefinition.html#) with a 'base' of the original OperationDefinition.  The custom definition would describe the specific subset of functionality supported."
              },
              "documentation": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "Documentation that describes anything special about the operation behavior, possibly detailing different behavior for system, type and instance&ndash;level invocation of the operation."
              }
            },
            "required": ["name", "definition"]
          }
        ]
      },
      "CapabilityStatement_Rest_Interaction": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackboneElement"
          },
          {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "enum": [
                  "transaction",
                  "batch",
                  "search-system",
                  "history-system"
                ],
                "description": "Coded identifier of the operation, supported by the system resource."
              },
              "documentation": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "Guidance specific to the implementation of this operation, such as 'delete is a logical delete' or 'updates are only allowed with version id' or 'creates permitted from pre&ndash;authorized certificates only'."
              }
            },
            "required": ["code"]
          }
        ]
      },
      "CapabilityStatement_Messaging": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackboneElement"
          },
          {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CapabilityStatement_Messaging_Endpoint",
                  "description": "An endpoint (network accessible address) to which messages and/or replies are to be sent."
                }
              },
              "reliableCache": {
                "type": "integer",
                "format": "int32",
                "description": "Length if the receiver's reliable messaging cache in minutes (if a receiver) or how long the cache length on the receiver should be (if a sender)."
              },
              "documentation": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "Documentation about the system's messaging capabilities for this endpoint not otherwise documented by the capability statement.  For example, the process for becoming an authorized messaging exchange partner."
              },
              "supportedMessage": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CapabilityStatement_Messaging_SupportedMessage",
                  "description": "References to message definitions for messages this system can send or receive."
                }
              }
            }
          }
        ]
      },
      "CapabilityStatement_Messaging_Endpoint": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackboneElement"
          },
          {
            "type": "object",
            "properties": {
              "protocol": {
                "$ref": "#/components/schemas/Coding",
                "description": "A list of the messaging transport protocol(s) identifiers, supported by this endpoint."
              },
              "address": {
                "type": "string",
                "pattern": "\\S*",
                "description": "The network address of the endpoint. For solutions that do not use network addresses for routing, it can be just an identifier."
              }
            },
            "required": ["protocol", "address"]
          }
        ]
      },
      "CapabilityStatement_Messaging_SupportedMessage": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackboneElement"
          },
          {
            "type": "object",
            "properties": {
              "mode": {
                "type": "string",
                "enum": ["sender", "receiver"],
                "description": "The mode of this event declaration &ndash; whether application is sender or receiver."
              },
              "definition": {
                "type": "string",
                "pattern": "\\S*",
                "description": "Points to a message definition that identifies the messaging event, message structure, allowed responses, etc."
              }
            },
            "required": ["mode", "definition"]
          }
        ]
      },
      "CapabilityStatement_Document": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackboneElement"
          },
          {
            "type": "object",
            "properties": {
              "mode": {
                "type": "string",
                "enum": ["producer", "consumer"],
                "description": "Mode of this document declaration &ndash; whether an application is a producer or consumer."
              },
              "documentation": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "A description of how the application supports or uses the specified document profile.  For example, when documents are created, what action is taken with consumed documents, etc."
              },
              "profile": {
                "type": "string",
                "pattern": "\\S*",
                "description": "A profile on the document Bundle that constrains which resources are present, and their contents."
              }
            },
            "required": ["mode", "profile"]
          }
        ]
      },
      "OperationOutcome": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DomainResource"
          },
          {
            "type": "object",
            "properties": {
              "issue": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OperationOutcome_Issue",
                  "description": "An error, warning, or information message that results from a system action."
                },
                "minItems": 1
              }
            },
            "required": ["issue"]
          }
        ],
        "example": {
          "resourceType": "OperationOutcome",
          "meta": {
            "tag": [
              {
                "code": "ibm/minimal"
              }
            ]
          },
          "issue": [
            {
              "_severity": {
                "extension": [
                  {
                    "url": "http://hl7.org/fhir/StructureDefinition/data-absent-reason",
                    "valueCode": "unknown"
                  }
                ]
              },
              "_code": {
                "extension": [
                  {
                    "url": "http://hl7.org/fhir/StructureDefinition/data-absent-reason",
                    "valueCode": "unknown"
                  }
                ]
              }
            }
          ]
        }
      },
      "OperationOutcome_Issue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackboneElement"
          },
          {
            "type": "object",
            "properties": {
              "severity": {
                "type": "string",
                "enum": ["fatal", "error", "warning", "information"],
                "description": "Indicates whether the issue indicates a variation from successful processing."
              },
              "code": {
                "type": "string",
                "enum": [
                  "invalid",
                  "structure",
                  "required",
                  "value",
                  "invariant",
                  "security",
                  "login",
                  "unknown",
                  "expired",
                  "forbidden",
                  "suppressed",
                  "processing",
                  "not-supported",
                  "duplicate",
                  "multiple-matches",
                  "not-found",
                  "deleted",
                  "too-long",
                  "code-invalid",
                  "extension",
                  "too-costly",
                  "business-rule",
                  "conflict",
                  "transient",
                  "lock-error",
                  "no-store",
                  "exception",
                  "timeout",
                  "incomplete",
                  "throttled",
                  "informational"
                ],
                "description": "Describes the type of the issue. The system that creates an OperationOutcome SHALL choose the most applicable code from the IssueType value set, and may additional provide its own code for the error in the details element."
              },
              "details": {
                "$ref": "#/components/schemas/CodeableConcept",
                "description": "Additional details about the error. This may be a text description of the error or a system code that identifies the error."
              },
              "diagnostics": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "Additional diagnostic information about the issue."
              },
              "location": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "[ \\r\\n\\t\\S]+",
                  "description": "This element is deprecated because it is XML specific. It is replaced by issue.expression, which is format independent, and simpler to parse. \n\nFor resource issues, this will be a simple XPath limited to element names, repetition indicators and the default child accessor that identifies one of the elements in the resource that caused this issue to be raised.  For HTTP errors, will be \"http.\" + the parameter name."
                }
              },
              "expression": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "[ \\r\\n\\t\\S]+",
                  "description": "A [simple subset of FHIRPath](fhirpath.html#simple) limited to element names, repetition indicators and the default child accessor that identifies one of the elements in the resource that caused this issue to be raised."
                }
              }
            },
            "required": ["severity", "code"]
          }
        ]
      },
      "Patient": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DomainResource"
          },
          {
            "type": "object",
            "properties": {
              "identifier": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Identifier",
                  "description": "An identifier for this patient."
                }
              },
              "active": {
                "type": "boolean",
                "description": "Whether this patient record is in active use. \nMany systems use this property to mark as non&ndash;current patients, such as those that have not been seen for a period of time based on an organization's business rules.\n\nIt is often used to filter patient lists to exclude inactive patients\n\nDeceased patients may also be marked as inactive for the same reasons, but may be active for some time after death."
              },
              "name": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/HumanName",
                  "description": "A name associated with the individual."
                }
              },
              "telecom": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ContactPoint",
                  "description": "A contact detail (e.g. a telephone number or an email address) by which the individual may be contacted."
                }
              },
              "gender": {
                "type": "string",
                "enum": ["male", "female", "other", "unknown"],
                "description": "Administrative Gender &ndash; the gender that the patient is considered to have for administration and record keeping purposes."
              },
              "birthDate": {
                "type": "string",
                "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?",
                "description": "The date of birth for the individual."
              },
              "deceasedBoolean": {
                "type": "boolean",
                "description": "Indicates if the individual is deceased or not."
              },
              "deceasedDateTime": {
                "type": "string",
                "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                "description": "Indicates if the individual is deceased or not."
              },
              "address": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Address",
                  "description": "An address for the individual."
                }
              },
              "maritalStatus": {
                "$ref": "#/components/schemas/CodeableConcept",
                "description": "This field contains a patient's most recent marital (civil) status."
              },
              "multipleBirthBoolean": {
                "type": "boolean",
                "description": "Indicates whether the patient is part of a multiple (boolean) or indicates the actual birth order (integer)."
              },
              "multipleBirthInteger": {
                "type": "integer",
                "format": "int32",
                "description": "Indicates whether the patient is part of a multiple (boolean) or indicates the actual birth order (integer)."
              },
              "photo": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Attachment",
                  "description": "Image of the patient."
                }
              },
              "contact": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Patient_Contact",
                  "description": "A contact party (e.g. guardian, partner, friend) for the patient."
                }
              },
              "communication": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Patient_Communication",
                  "description": "A language which may be used to communicate with the patient about his or her health."
                }
              },
              "generalPractitioner": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Reference",
                  "description": "Patient's nominated care provider."
                }
              },
              "managingOrganization": {
                "$ref": "#/components/schemas/Reference",
                "description": "Organization that is the custodian of the patient record."
              },
              "link": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Patient_Link",
                  "description": "Link to another patient resource that concerns the same actual patient."
                }
              }
            }
          }
        ],
        "example": {
          "resourceType": "Patient",
          "meta": {
            "tag": [
              {
                "code": "ibm/minimal"
              }
            ]
          }
        }
      },
      "Patient_Contact": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackboneElement"
          },
          {
            "type": "object",
            "properties": {
              "relationship": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CodeableConcept",
                  "description": "The nature of the relationship between the patient and the contact person."
                }
              },
              "name": {
                "$ref": "#/components/schemas/HumanName",
                "description": "A name associated with the contact person."
              },
              "telecom": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ContactPoint",
                  "description": "A contact detail for the person, e.g. a telephone number or an email address."
                }
              },
              "address": {
                "$ref": "#/components/schemas/Address",
                "description": "Address for the contact person."
              },
              "gender": {
                "type": "string",
                "enum": ["male", "female", "other", "unknown"],
                "description": "Administrative Gender &ndash; the gender that the contact person is considered to have for administration and record keeping purposes."
              },
              "organization": {
                "$ref": "#/components/schemas/Reference",
                "description": "Organization on behalf of which the contact is acting or for which the contact is working."
              },
              "period": {
                "$ref": "#/components/schemas/Period",
                "description": "The period during which this contact person or organization is valid to be contacted relating to this patient."
              }
            }
          }
        ]
      },
      "Patient_Communication": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackboneElement"
          },
          {
            "type": "object",
            "properties": {
              "language": {
                "$ref": "#/components/schemas/CodeableConcept",
                "description": "The ISO&ndash;639&ndash;1 alpha 2 code in lower case for the language, optionally followed by a hyphen and the ISO&ndash;3166&ndash;1 alpha 2 code for the region in upper case; e.g. \"en\" for English, or \"en&ndash;US\" for American English versus \"en&ndash;EN\" for England English."
              },
              "preferred": {
                "type": "boolean",
                "description": "Indicates whether or not the patient prefers this language (over other languages he masters up a certain level)."
              }
            },
            "required": ["language"]
          }
        ]
      },
      "Patient_Link": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackboneElement"
          },
          {
            "type": "object",
            "properties": {
              "other": {
                "$ref": "#/components/schemas/Reference",
                "description": "The other patient resource that the link refers to."
              },
              "type": {
                "type": "string",
                "enum": ["replaced-by", "replaces", "refer", "seealso"],
                "description": "The type of link between this patient resource and another patient resource."
              }
            },
            "required": ["other", "type"]
          }
        ]
      },
      "Element": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
            "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."
          },
          "extension": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Extension",
              "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."
            },
            "example": [
              {
                "url": "http://example.com",
                "valueString": "text value"
              }
            ]
          }
        }
      },
      "BackboneElement": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Element"
          },
          {
            "type": "object",
            "properties": {
              "modifierExtension": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Extension",
                  "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)."
                }
              }
            }
          }
        ]
      },
      "Address": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Element"
          },
          {
            "type": "object",
            "properties": {
              "use": {
                "type": "string",
                "enum": ["home", "work", "temp", "old", "billing"],
                "description": "The purpose of this address."
              },
              "type": {
                "type": "string",
                "enum": ["postal", "physical", "both"],
                "description": "Distinguishes between physical addresses (those you can visit) and mailing addresses (e.g. PO Boxes and care&ndash;of addresses). Most addresses are both."
              },
              "text": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "Specifies the entire address as it should be displayed e.g. on a postal label. This may be provided instead of or as well as the specific parts."
              },
              "line": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "[ \\r\\n\\t\\S]+",
                  "description": "This component contains the house number, apartment number, street name, street direction,  P.O. Box number, delivery hints, and similar address information."
                }
              },
              "city": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "The name of the city, town, suburb, village or other community or delivery center."
              },
              "district": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "The name of the administrative area (county)."
              },
              "state": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "Sub&ndash;unit of a country with limited sovereignty in a federally organized country. A code may be used if codes are in common use (e.g. US 2 letter state codes)."
              },
              "postalCode": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "A postal code designating a region defined by the postal service."
              },
              "country": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "Country &ndash; a nation as commonly understood or generally accepted."
              },
              "period": {
                "$ref": "#/components/schemas/Period",
                "description": "Time period when address was/is in use."
              }
            }
          }
        ]
      },
      "Age": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Quantity"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "Annotation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Element"
          },
          {
            "type": "object",
            "properties": {
              "authorReference": {
                "$ref": "#/components/schemas/Reference",
                "description": "The individual responsible for making the annotation."
              },
              "authorString": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "The individual responsible for making the annotation."
              },
              "time": {
                "type": "string",
                "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                "description": "Indicates when this particular annotation was made."
              },
              "text": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "The text of the annotation in markdown format."
              }
            },
            "required": ["text"]
          }
        ]
      },
      "Attachment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Element"
          },
          {
            "type": "object",
            "properties": {
              "contentType": {
                "type": "string",
                "pattern": "[^\\s]+(\\s[^\\s]+)*",
                "description": "Identifies the type of the data in the attachment and allows a method to be chosen to interpret or render the data. Includes mime type parameters such as charset where appropriate."
              },
              "language": {
                "type": "string",
                "pattern": "[^\\s]+(\\s[^\\s]+)*",
                "description": "The human language of the content. The value can be any valid value according to BCP 47."
              },
              "data": {
                "type": "string",
                "pattern": "(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+",
                "description": "The actual data of the attachment &ndash; a sequence of bytes, base64 encoded."
              },
              "url": {
                "type": "string",
                "pattern": "\\S*",
                "description": "A location where the data can be accessed."
              },
              "size": {
                "type": "integer",
                "format": "int32",
                "description": "The number of bytes of data that make up this attachment (before base64 encoding, if that is done)."
              },
              "hash": {
                "type": "string",
                "pattern": "(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+",
                "description": "The calculated hash of the data using SHA&ndash;1. Represented using base64."
              },
              "title": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "A label or set of text to display in place of the data."
              },
              "creation": {
                "type": "string",
                "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                "description": "The date that the attachment was first created."
              }
            }
          }
        ]
      },
      "CodeableConcept": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Element"
          },
          {
            "type": "object",
            "properties": {
              "coding": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Coding",
                  "description": "A reference to a code defined by a terminology system."
                }
              },
              "text": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user."
              }
            }
          }
        ]
      },
      "Coding": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Element"
          },
          {
            "type": "object",
            "properties": {
              "system": {
                "type": "string",
                "pattern": "\\S*",
                "description": "The identification of the code system that defines the meaning of the symbol in the code."
              },
              "version": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "The version of the code system which was used when choosing this code. Note that a well&ndash;maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged."
              },
              "code": {
                "type": "string",
                "pattern": "[^\\s]+(\\s[^\\s]+)*",
                "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post&ndash;coordination)."
              },
              "display": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "A representation of the meaning of the code in the system, following the rules of the system."
              },
              "userSelected": {
                "type": "boolean",
                "description": "Indicates that this coding was chosen by a user directly &ndash; e.g. off a pick list of available items (codes or displays)."
              }
            }
          }
        ]
      },
      "ContactPoint": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Element"
          },
          {
            "type": "object",
            "properties": {
              "system": {
                "type": "string",
                "enum": [
                  "phone",
                  "fax",
                  "email",
                  "pager",
                  "url",
                  "sms",
                  "other"
                ],
                "description": "Telecommunications form for contact point &ndash; what communications system is required to make use of the contact."
              },
              "value": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "The actual contact point details, in a form that is meaningful to the designated communication system (i.e. phone number or email address)."
              },
              "use": {
                "type": "string",
                "enum": ["home", "work", "temp", "old", "mobile"],
                "description": "Identifies the purpose for the contact point."
              },
              "rank": {
                "type": "integer",
                "format": "int32",
                "description": "Specifies a preferred order in which to use a set of contacts. ContactPoints with lower rank values are more preferred than those with higher rank values."
              },
              "period": {
                "$ref": "#/components/schemas/Period",
                "description": "Time period when the contact point was/is in use."
              }
            }
          }
        ]
      },
      "Count": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Quantity"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "Distance": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Quantity"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "Duration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Quantity"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "HumanName": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Element"
          },
          {
            "type": "object",
            "properties": {
              "use": {
                "type": "string",
                "enum": [
                  "usual",
                  "official",
                  "temp",
                  "nickname",
                  "anonymous",
                  "old",
                  "maiden"
                ],
                "description": "Identifies the purpose for this name."
              },
              "text": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "Specifies the entire name as it should be displayed e.g. on an application UI. This may be provided instead of or as well as the specific parts."
              },
              "family": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "The part of a name that links to the genealogy. In some cultures (e.g. Eritrea) the family name of a son is the first name of his father."
              },
              "given": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "[ \\r\\n\\t\\S]+",
                  "description": "Given name."
                }
              },
              "prefix": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "[ \\r\\n\\t\\S]+",
                  "description": "Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the start of the name."
                }
              },
              "suffix": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "[ \\r\\n\\t\\S]+",
                  "description": "Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the end of the name."
                }
              },
              "period": {
                "$ref": "#/components/schemas/Period",
                "description": "Indicates the period of time when this name was valid for the named person."
              }
            }
          }
        ]
      },
      "Identifier": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Element"
          },
          {
            "type": "object",
            "properties": {
              "use": {
                "type": "string",
                "enum": ["usual", "official", "temp", "secondary", "old"],
                "description": "The purpose of this identifier."
              },
              "type": {
                "$ref": "#/components/schemas/CodeableConcept",
                "description": "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose."
              },
              "system": {
                "type": "string",
                "pattern": "\\S*",
                "description": "Establishes the namespace for the value &ndash; that is, a URL that describes a set values that are unique."
              },
              "value": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "The portion of the identifier typically relevant to the user and which is unique within the context of the system."
              },
              "period": {
                "$ref": "#/components/schemas/Period",
                "description": "Time period during which identifier is/was valid for use."
              },
              "assigner": {
                "$ref": "#/components/schemas/Reference",
                "description": "Organization that issued/manages the identifier.",
                "example": {
                  "reference": "Organization/123",
                  "type": "Organization",
                  "display": "The Assigning Organization"
                }
              }
            }
          }
        ]
      },
      "Money": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Element"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "description": "Numerical value (with implicit precision)."
              },
              "currency": {
                "type": "string",
                "pattern": "[^\\s]+(\\s[^\\s]+)*",
                "description": "ISO 4217 Currency Code."
              }
            }
          }
        ]
      },
      "MoneyQuantity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Quantity"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "Period": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Element"
          },
          {
            "type": "object",
            "properties": {
              "start": {
                "type": "string",
                "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                "description": "The start of the period. The boundary is inclusive."
              },
              "end": {
                "type": "string",
                "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time."
              }
            }
          }
        ]
      },
      "Quantity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Element"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value."
              },
              "comparator": {
                "type": "string",
                "enum": ["<", "<=", ">=", ">"],
                "description": "How the value should be understood and represented &ndash; whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value."
              },
              "unit": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "A human&ndash;readable form of the unit."
              },
              "system": {
                "type": "string",
                "pattern": "\\S*",
                "description": "The identification of the system that provides the coded form of the unit."
              },
              "code": {
                "type": "string",
                "pattern": "[^\\s]+(\\s[^\\s]+)*",
                "description": "A computer processable form of the unit in some unit representation system."
              }
            }
          }
        ]
      },
      "Range": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Element"
          },
          {
            "type": "object",
            "properties": {
              "low": {
                "$ref": "#/components/schemas/SimpleQuantity",
                "description": "The low limit. The boundary is inclusive."
              },
              "high": {
                "$ref": "#/components/schemas/SimpleQuantity",
                "description": "The high limit. The boundary is inclusive."
              }
            }
          }
        ]
      },
      "Ratio": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Element"
          },
          {
            "type": "object",
            "properties": {
              "numerator": {
                "$ref": "#/components/schemas/Quantity",
                "description": "The value of the numerator."
              },
              "denominator": {
                "$ref": "#/components/schemas/Quantity",
                "description": "The value of the denominator."
              }
            }
          }
        ]
      },
      "Reference": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Element"
          },
          {
            "type": "object",
            "properties": {
              "reference": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources."
              },
              "type": {
                "type": "string",
                "pattern": "\\S*",
                "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)."
              },
              "identifier": {
                "$ref": "#/components/schemas/Identifier",
                "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference."
              },
              "display": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "Plain text narrative that identifies the resource in addition to the resource reference."
              }
            }
          }
        ]
      },
      "SampledData": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Element"
          },
          {
            "type": "object",
            "properties": {
              "origin": {
                "$ref": "#/components/schemas/SimpleQuantity",
                "description": "The base quantity that a measured value of zero represents. In addition, this provides the units of the entire measurement series."
              },
              "period": {
                "type": "number",
                "description": "The length of time between sampling times, measured in milliseconds."
              },
              "factor": {
                "type": "number",
                "description": "A correction factor that is applied to the sampled data points before they are added to the origin."
              },
              "lowerLimit": {
                "type": "number",
                "description": "The lower limit of detection of the measured points. This is needed if any of the data points have the value \"L\" (lower than detection limit)."
              },
              "upperLimit": {
                "type": "number",
                "description": "The upper limit of detection of the measured points. This is needed if any of the data points have the value \"U\" (higher than detection limit)."
              },
              "dimensions": {
                "type": "integer",
                "format": "int32",
                "description": "The number of sample points at each time point. If this value is greater than one, then the dimensions will be interlaced &ndash; all the sample points for a point in time will be recorded at once."
              },
              "data": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "A series of data points which are decimal values separated by a single space (character u20). The special values \"E\" (error), \"L\" (below detection limit) and \"U\" (above detection limit) can also be used in place of a decimal value."
              }
            },
            "required": ["origin", "period", "dimensions"]
          }
        ]
      },
      "SimpleQuantity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Quantity"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "Signature": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Element"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Coding",
                  "description": "An indication of the reason that the entity signed this document. This may be explicitly included as part of the signature information and can be used when determining accountability for various actions concerning the document."
                },
                "minItems": 1
              },
              "when": {
                "type": "string",
                "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                "description": "When the digital signature was signed."
              },
              "who": {
                "$ref": "#/components/schemas/Reference",
                "description": "A reference to an application&ndash;usable description of the identity that signed  (e.g. the signature used their private key)."
              },
              "onBehalfOf": {
                "$ref": "#/components/schemas/Reference",
                "description": "A reference to an application&ndash;usable description of the identity that is represented by the signature."
              },
              "targetFormat": {
                "type": "string",
                "pattern": "[^\\s]+(\\s[^\\s]+)*",
                "description": "A mime type that indicates the technical format of the target resources signed by the signature."
              },
              "sigFormat": {
                "type": "string",
                "pattern": "[^\\s]+(\\s[^\\s]+)*",
                "description": "A mime type that indicates the technical format of the signature. Important mime types are application/signature+xml for X ML DigSig, application/jose for JWS, and image/* for a graphical image of a signature, etc."
              },
              "data": {
                "type": "string",
                "pattern": "(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+",
                "description": "The base64 encoding of the Signature content. When signature is not recorded electronically this element would be empty."
              }
            },
            "required": ["type", "when", "who"]
          }
        ]
      },
      "Timing": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackboneElement"
          },
          {
            "type": "object",
            "properties": {
              "event": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                  "description": "Identifies specific times when the event occurs."
                }
              },
              "repeat": {
                "$ref": "#/components/schemas/Timing_Repeat",
                "description": "A set of rules that describe when the event is scheduled."
              },
              "code": {
                "$ref": "#/components/schemas/CodeableConcept",
                "description": "A code for the timing schedule (or just text in code.text). Some codes such as BID are ubiquitous, but many institutions define their own additional codes. If a code is provided, the code is understood to be a complete statement of whatever is specified in the structured timing data, and either the code or the data may be used to interpret the Timing, with the exception that .repeat.bounds still applies over the code (and is not contained in the code)."
              }
            }
          }
        ]
      },
      "Timing_Repeat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackboneElement"
          },
          {
            "type": "object",
            "properties": {
              "boundsDuration": {
                "$ref": "#/components/schemas/Duration",
                "description": "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule."
              },
              "boundsRange": {
                "$ref": "#/components/schemas/Range",
                "description": "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule."
              },
              "boundsPeriod": {
                "$ref": "#/components/schemas/Period",
                "description": "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule."
              },
              "count": {
                "type": "integer",
                "format": "int32",
                "description": "A total count of the desired number of repetitions across the duration of the entire timing specification. If countMax is present, this element indicates the lower bound of the allowed range of count values."
              },
              "countMax": {
                "type": "integer",
                "format": "int32",
                "description": "If present, indicates that the count is a range &ndash; so to perform the action between [count] and [countMax] times."
              },
              "duration": {
                "type": "number",
                "description": "How long this thing happens for when it happens. If durationMax is present, this element indicates the lower bound of the allowed range of the duration."
              },
              "durationMax": {
                "type": "number",
                "description": "If present, indicates that the duration is a range &ndash; so to perform the action between [duration] and [durationMax] time length."
              },
              "durationUnit": {
                "type": "string",
                "enum": ["s", "min", "h", "d", "wk", "mo", "a"],
                "description": "The units of time for the duration, in UCUM units."
              },
              "frequency": {
                "type": "integer",
                "format": "int32",
                "description": "The number of times to repeat the action within the specified period. If frequencyMax is present, this element indicates the lower bound of the allowed range of the frequency."
              },
              "frequencyMax": {
                "type": "integer",
                "format": "int32",
                "description": "If present, indicates that the frequency is a range &ndash; so to repeat between [frequency] and [frequencyMax] times within the period or period range."
              },
              "period": {
                "type": "number",
                "description": "Indicates the duration of time over which repetitions are to occur; e.g. to express \"3 times per day\", 3 would be the frequency and \"1 day\" would be the period. If periodMax is present, this element indicates the lower bound of the allowed range of the period length."
              },
              "periodMax": {
                "type": "number",
                "description": "If present, indicates that the period is a range from [period] to [periodMax], allowing expressing concepts such as \"do this once every 3&ndash;5 days."
              },
              "periodUnit": {
                "type": "string",
                "enum": ["s", "min", "h", "d", "wk", "mo", "a"],
                "description": "The units of time for the period in UCUM units."
              },
              "dayOfWeek": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": ["mon", "tue", "wed", "thu", "fri", "sat", "sun"],
                  "description": "If one or more days of week is provided, then the action happens only on the specified day(s)."
                }
              },
              "timeOfDay": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?",
                  "description": "Specified time of day for action to take place."
                }
              },
              "when": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "MORN",
                    "MORN.early",
                    "MORN.late",
                    "NOON",
                    "AFT",
                    "AFT.early",
                    "AFT.late",
                    "EVE",
                    "EVE.early",
                    "EVE.late",
                    "NIGHT",
                    "PHS",
                    "HS",
                    "WAKE",
                    "C",
                    "CM",
                    "CD",
                    "CV",
                    "AC",
                    "ACM",
                    "ACD",
                    "ACV",
                    "PC",
                    "PCM",
                    "PCD",
                    "PCV"
                  ],
                  "description": "An approximate time period during the day, potentially linked to an event of daily living that indicates when the action should occur."
                }
              },
              "offset": {
                "type": "integer",
                "format": "int32",
                "description": "The number of minutes from the event. If the event code does not indicate whether the minutes is before or after the event, then the offset is assumed to be after the event."
              }
            }
          }
        ]
      },
      "ContactDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Element"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "The name of an individual to contact."
              },
              "telecom": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ContactPoint",
                  "description": "The contact details for the individual (if a name was provided) or the organization."
                }
              }
            }
          }
        ]
      },
      "RelatedArtifact": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Element"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "documentation",
                  "justification",
                  "citation",
                  "predecessor",
                  "successor",
                  "derived-from",
                  "depends-on",
                  "composed-of"
                ],
                "description": "The type of relationship to the related artifact."
              },
              "label": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "A short label that can be used to reference the citation from elsewhere in the containing artifact, such as a footnote index."
              },
              "display": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "A brief description of the document or knowledge resource being referenced, suitable for display to a consumer."
              },
              "citation": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "A bibliographic citation for the related artifact. This text SHOULD be formatted according to an accepted citation format."
              },
              "url": {
                "type": "string",
                "pattern": "\\S*",
                "description": "A url for the artifact that can be followed to access the actual content."
              },
              "document": {
                "$ref": "#/components/schemas/Attachment",
                "description": "The document being referenced, represented as an attachment. This is exclusive with the resource element."
              },
              "resource": {
                "type": "string",
                "pattern": "\\S*",
                "description": "The related resource, such as a library, value set, profile, or other knowledge resource."
              }
            },
            "required": ["type"]
          }
        ]
      },
      "UsageContext": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Element"
          },
          {
            "type": "object",
            "properties": {
              "code": {
                "$ref": "#/components/schemas/Coding",
                "description": "A code that identifies the type of context being specified by this usage context."
              },
              "valueCodeableConcept": {
                "$ref": "#/components/schemas/CodeableConcept",
                "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code."
              },
              "valueQuantity": {
                "$ref": "#/components/schemas/Quantity",
                "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code."
              },
              "valueRange": {
                "$ref": "#/components/schemas/Range",
                "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code."
              },
              "valueReference": {
                "$ref": "#/components/schemas/Reference",
                "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code."
              }
            },
            "required": ["code"]
          }
        ]
      },
      "Meta": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Element"
          },
          {
            "type": "object",
            "properties": {
              "versionId": {
                "type": "string",
                "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                "description": "The version specific identifier, as it appears in the version portion of the URL. This value changes when the resource is created, updated, or deleted."
              },
              "lastUpdated": {
                "type": "string",
                "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                "description": "When the resource last changed &ndash; e.g. when the version changed."
              },
              "source": {
                "type": "string",
                "pattern": "\\S*",
                "description": "A uri that identifies the source system of the resource. This provides a minimal amount of [Provenance](provenance.html#) information that can be used to track or differentiate the source of information in the resource. The source may identify another FHIR server, document, message, database, etc."
              },
              "profile": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "\\S*",
                  "description": "A list of profiles (references to [StructureDefinition](structuredefinition.html#) resources) that this resource claims to conform to. The URL is a reference to [StructureDefinition.url](structuredefinition&ndash;definitions.html#StructureDefinition.url)."
                }
              },
              "security": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Coding",
                  "description": "Security labels applied to this resource. These tags connect specific resources to the overall security policy and infrastructure."
                }
              },
              "tag": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Coding",
                  "description": "Tags applied to this resource. Tags are intended to be used to identify and relate resources to process and workflow, and applications are not required to consider the tags when interpreting the meaning of a resource."
                }
              }
            }
          }
        ]
      },
      "Narrative": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Element"
          },
          {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": ["generated", "extensions", "additional", "empty"],
                "description": "The status of the narrative &ndash; whether it's entirely generated (from just the defined data or the extensions too), or whether a human authored it and it may contain additional data."
              },
              "div": {
                "type": "string",
                "description": "The actual narrative content, a stripped down version of XHTML."
              }
            },
            "required": ["status", "div"]
          }
        ]
      },
      "Extension": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Element"
          },
          {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "pattern": "\\S*",
                "description": "Source of the definition for the extension code &ndash; a logical name or a URL."
              },
              "valueBase64Binary": {
                "type": "string",
                "pattern": "(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+",
                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueBoolean": {
                "type": "boolean",
                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCanonical": {
                "type": "string",
                "pattern": "\\S*",
                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCode": {
                "type": "string",
                "pattern": "[^\\s]+(\\s[^\\s]+)*",
                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDate": {
                "type": "string",
                "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?",
                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDateTime": {
                "type": "string",
                "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDecimal": {
                "type": "number",
                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueId": {
                "type": "string",
                "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueInstant": {
                "type": "string",
                "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueInteger": {
                "type": "integer",
                "format": "int32",
                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMarkdown": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueOid": {
                "type": "string",
                "pattern": "urn:oid:[0-2](\\.(0|[1-9][0-9]*))+",
                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePositiveInt": {
                "type": "integer",
                "format": "int32",
                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueString": {
                "type": "string",
                "pattern": "[ \\r\\n\\t\\S]+",
                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTime": {
                "type": "string",
                "pattern": "([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?",
                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUnsignedInt": {
                "type": "integer",
                "format": "int32",
                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUri": {
                "type": "string",
                "pattern": "\\S*",
                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUrl": {
                "type": "string",
                "pattern": "\\S*",
                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUuid": {
                "type": "string",
                "pattern": "urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}",
                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAddress": {
                "$ref": "#/components/schemas/Address",
                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAge": {
                "$ref": "#/components/schemas/Age",
                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAnnotation": {
                "$ref": "#/components/schemas/Annotation",
                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueAttachment": {
                "$ref": "#/components/schemas/Attachment",
                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCodeableConcept": {
                "$ref": "#/components/schemas/CodeableConcept",
                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCoding": {
                "$ref": "#/components/schemas/Coding",
                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactPoint": {
                "$ref": "#/components/schemas/ContactPoint",
                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueCount": {
                "$ref": "#/components/schemas/Count",
                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDistance": {
                "$ref": "#/components/schemas/Distance",
                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueDuration": {
                "$ref": "#/components/schemas/Duration",
                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueHumanName": {
                "$ref": "#/components/schemas/HumanName",
                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueIdentifier": {
                "$ref": "#/components/schemas/Identifier",
                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMoney": {
                "$ref": "#/components/schemas/Money",
                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valuePeriod": {
                "$ref": "#/components/schemas/Period",
                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueQuantity": {
                "$ref": "#/components/schemas/Quantity",
                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRange": {
                "$ref": "#/components/schemas/Range",
                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRatio": {
                "$ref": "#/components/schemas/Ratio",
                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueReference": {
                "$ref": "#/components/schemas/Reference",
                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSampledData": {
                "$ref": "#/components/schemas/SampledData",
                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueSignature": {
                "$ref": "#/components/schemas/Signature",
                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueTiming": {
                "$ref": "#/components/schemas/Timing",
                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueContactDetail": {
                "$ref": "#/components/schemas/ContactDetail",
                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueRelatedArtifact": {
                "$ref": "#/components/schemas/RelatedArtifact",
                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueUsageContext": {
                "$ref": "#/components/schemas/UsageContext",
                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              },
              "valueMeta": {
                "$ref": "#/components/schemas/Meta",
                "description": "Value of extension &ndash; must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list)."
              }
            },
            "required": ["url"]
          }
        ]
      }
    }
  }
}
